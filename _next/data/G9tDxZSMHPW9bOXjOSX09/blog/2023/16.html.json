{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/16","wordCount":487,"contentHtml":"<h2>在 Next.js 中预渲染</h2>\n<p>Next.js 有两种预渲染形式：Static Generation和Server-side Rendering。区别在于它何时为页面生成 HTML。</p>\n<ul>\n<li>静态生成是在构建时生成 HTML 的预渲染方法。然后在每个请求上重新使用预呈现的 HTML 。</li>\n<li>服务器端呈现是在每个请求上生成 HTML 的预呈现方法。</li>\n</ul>\n<p>重要的是，Next.js 允许您选择用于每个页面的预呈现表单。您可以通过对大多数页面使用静态生成并为其他页面使用服务器端呈现来创建“混合”Next.js 应用程序。</p>\n<h2>使用静态生成 ( getStaticProps())</h2>\n<p>现在，我们需要添加一个 import for 并 在ingetSortedPostsData 中调用它。getStaticPropspages/index.js</p>\n<p>在您的编辑器中打开 <code>pages/index.js</code> 并在导出的组件上方添加以下代码Home：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getSortedPostsData <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'../lib/posts'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> allPostsData <span class=\"token operator\">=</span> <span class=\"token function\">getSortedPostsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      allPostsData<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>通过返回 in 中的对象 allPostsData 内部，博客文章将作为 prop 传递给组件。现在您可以像这样访问博客文章：propsgetStaticPropsHome</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Home</span></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> allPostsData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>显示博客文章</h2>\n<p>要显示博客文章，让我们更新组件以在带有您的自我介绍的部分下方Home添加另一个带有数据的标签。不要忘记也将道具从更改 () 为 ({ allPostsData }) ：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Home</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> allPostsData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Layout</span> home<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Keep the existing code here */</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Add this &#x3C;section> tag below the existing &#x3C;section> tag */</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span>section className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>utilStyles<span class=\"token punctuation\">.</span><span class=\"token property-access\">headingMd</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>utilStyles<span class=\"token punctuation\">.</span><span class=\"token property-access\">padding1px</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>h2 className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>utilStyles<span class=\"token punctuation\">.</span><span class=\"token property-access\">headingLg</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token maybe-class-name\">Blog</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>ul className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>utilStyles<span class=\"token punctuation\">.</span><span class=\"token property-access\">list</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>allPostsData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> title <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&#x3C;</span>li className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>utilStyles<span class=\"token punctuation\">.</span><span class=\"token property-access\">listItem</span><span class=\"token punctuation\">}</span> key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n              <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span>\n              <span class=\"token operator\">&#x3C;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span>\n              <span class=\"token operator\">&#x3C;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token punctuation\">{</span>date<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Layout</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>如果您访问http://localhost:3000 ，您现在应该可以看到博客数据。</p>\n<p>恭喜！我们已经成功地获取了外部数据（从文件系统）并使用这些数据预渲染了索引页面。</p>\n","title":"Next.js 中的预渲染，使用静态生成来获取数据","date":"2023-03-29","category":"博客日记","tag":["Next.js","预渲染","静态"]}},"__N_SSG":true}