{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/20","wordCount":433,"contentHtml":"<h2>渲染 Markdown</h2>\n<p>为了渲染 <code>Markdown</code> 内容，我们将使用 <code>remark</code> 库。首先，让我们安装它：</p>\n<p>注意：这一步其实我们在项目一开始就已经做了，这里就不需要再安装 <code>remark</code> 库了，可以跳过安装 <code>remark</code> 这一步。</p>\n<ul>\n<li>第一篇文章 《 <a href=\"/blog/2023/6.html\">如何使用 Next.js 构建高效的博客网站</a> 》 里我们在 package.json 文件里添加的内容，就已经有 <code>remark</code> 了。</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ssh\"><code class=\"language-ssh\">npm install remark remark-html</code></pre></div>\n<p>然后，打开 <code>lib/posts.js</code> ，并在文件顶部添加以下导入：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> remark <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'remark'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">html</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'remark-html'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>并在同一文件中更新 <code>getPostData()</code> 函数以使用 <code>remark</code> ：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPostData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fullPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>postsDirectory<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.md</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> fileContents <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFileSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Use gray-matter to parse the post metadata section</span>\n  <span class=\"token keyword\">const</span> matterResult <span class=\"token operator\">=</span> <span class=\"token function\">matter</span><span class=\"token punctuation\">(</span>fileContents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Use remark to convert markdown into HTML string</span>\n  <span class=\"token keyword\">const</span> processedContent <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">remark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">process</span><span class=\"token punctuation\">(</span>matterResult<span class=\"token punctuation\">.</span><span class=\"token property-access\">content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> contentHtml <span class=\"token operator\">=</span> processedContent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Combine the data with the id and contentHtml</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">,</span>\n    contentHtml<span class=\"token punctuation\">,</span>\n    <span class=\"token spread operator\">...</span>matterResult<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>重要提示：我们在 <code>getPostData</code> 中添加了 <code>async</code> 关键字，因为我们需要使用 <code>await</code> 来调用 <code>remark</code> 。 <code>async/await</code> 允许您异步获取数据。</p>\n<p>这意味着我们需要更新 <code>pages/posts/[id].js</code> 中的 <code>getStaticProps</code> ，在调用 <code>getPostData</code> 时使用 <code>await</code> ：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Add the \"await\" keyword like this:</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">getPostData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      postData<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>最后，在 <code>pages/posts/[id].js</code> 中更新 <code>Post</code> 组件，以使用 <code>dangerouslySetInnerHTML</code> 呈现 <code>contentHtml</code> 里的内容：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> postData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Layout</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">title</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">date</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>div dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">__html</span><span class=\"token operator\">:</span> postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">contentHtml</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Layout</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>尝试再次访问这些页面：</p>\n<p><code>http://localhost:3000/posts/first http://localhost:3000/posts/about</code></p>\n<p>您现在应该看到博客内容了：</p>\n<p>我们快完成了！下一篇文章我们将优化每个页面。</p>\n","title":"使用 Next.js 读取 Markdown 内容数据","date":"2023-04-02","category":"博客日记","tag":["Next.js","Markdown","内容"]}},"__N_SSG":true}