{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/19","wordCount":330,"contentHtml":"<h2>设置 getStaticProps</h2>\n<p>我们需要获取必要的数据来渲染给定 id 的文章。</p>\n<p>为此，再次打开 <code>libposts.js</code> 并在底部添加以下 <code>getPostData</code> 函数。它将根据id返回文章数据：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPostData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fullPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>postsDirectory<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.md</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> fileContents <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFileSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token maybe-class-name\">Use</span> gray<span class=\"token operator\">-</span>matter to parse the post metadata section\n  <span class=\"token keyword\">const</span> matterResult <span class=\"token operator\">=</span> <span class=\"token function\">matter</span><span class=\"token punctuation\">(</span>fileContents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token maybe-class-name\">Combine</span> the data <span class=\"token keyword\">with</span> the id\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">,</span>\n    <span class=\"token spread operator\">...</span>matterResult<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>然后，打开页面 <code>posts[id].js</code> 并将此行：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAllPostIds <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'....libposts'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>替换为以下代码：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAllPostIds<span class=\"token punctuation\">,</span> getPostData <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'....libposts'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> postData <span class=\"token operator\">=</span> <span class=\"token function\">getPostData</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    props <span class=\"token punctuation\">{</span>\n      postData<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>文章页面正在使用 <code>getPostData</code> 函数在 <code>getStaticProps</code> 中获取文章数据并将其作为 <code>props</code> 返回。</p>\n<h2>更新 Post 组件</h2>\n<p>现在，让我们更新 <code>Post</code> 组件以使用 <code>postData</code> 。在页面 <code>posts[id].js</code> 中，用以下代码替换导出的 <code>Post</code> 组件：</p>\n<div class=\"remark-highlight\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> postData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token maybe-class-name\">Layout</span>\n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">title</span><span class=\"token punctuation\">}</span>\n      br \n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">}</span>\n      br \n      <span class=\"token punctuation\">{</span>postData<span class=\"token punctuation\">.</span><span class=\"token property-access\">date</span><span class=\"token punctuation\">}</span>\n    <span class=\"token maybe-class-name\">Layout</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>完成了！尝试访问这些页面：</p>\n<ul>\n<li>http://localhost:3000/posts/first</li>\n<li>http://localhost:3000/posts/about</li>\n</ul>\n<p>现在，您应该能够看到每个页面的博客数据.</p>\n<p>太好了！我们已成功生成动态路由。</p>\n<p>我们仍然没有显示博客 <code>Markdown</code> 内容，下一篇文章主要给大家讲显示博客 <code>Markdown</code> 内容。</p>\n","title":"使用 Next.js 读取 matter 文章信息","date":"2023-04-01","category":"博客日记","tag":["Next.js","预渲染","静态"]}},"__N_SSG":true}