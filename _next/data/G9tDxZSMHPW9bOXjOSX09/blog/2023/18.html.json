{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/18","wordCount":412,"contentHtml":"<h2>动态路由实现 getStaticPaths</h2>\n<p>首先，让我们设置文件：</p>\n<ul>\n<li>在 <code>pages/posts</code> 目录中创建一个名为 <code>[id] .js</code> 的文件。</li>\n<li>另外，删除 <code>pages/posts</code> 目录中的 <code>first-post.js</code> - 我们将不再使用此文件。</li>\n<li>然后，打开编辑器中的 <code>pages/posts/[id].js</code> 并粘贴以下代码。稍后我们将填写...：</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Layout</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'../../components/layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Layout</span><span class=\"token operator\">></span><span class=\"token spread operator\">...</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Layout</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>然后，打开 <code>lib/posts.js</code> 并在底部添加以下 <code>getAllPostIds</code> 函数。它将返回帖子目录中文件名（不包括.md）的列表：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getAllPostIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fileNames <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readdirSync</span><span class=\"token punctuation\">(</span>postsDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Returns an array that looks like this:</span>\n  <span class=\"token comment\">// [</span>\n  <span class=\"token comment\">//   {</span>\n  <span class=\"token comment\">//     params: {</span>\n  <span class=\"token comment\">//       id: 'ssg-ssr'</span>\n  <span class=\"token comment\">//     }</span>\n  <span class=\"token comment\">//   },</span>\n  <span class=\"token comment\">//   {</span>\n  <span class=\"token comment\">//     params: {</span>\n  <span class=\"token comment\">//       id: 'pre-rendering'</span>\n  <span class=\"token comment\">//     }</span>\n  <span class=\"token comment\">//   }</span>\n  <span class=\"token comment\">// ]</span>\n  <span class=\"token keyword control-flow\">return</span> fileNames<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileName</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> fileName<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token special-escape escape\">\\.</span>md<span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>重要提示：返回的列表不仅仅是字符串数组-它必须是像上面的注释所示的对象数组。每个对象必须具有 <code>params</code> 键，并包含一个带有id键的对象（因为我们在文件名中使用[id]）。否则，<code> getStaticPaths</code> 将失败。</p>\n<h2>导入 getAllPostIds</h2>\n<p>最后，我们将导入 <code>getAllPostIds</code> 函数并在 <code>getStaticPaths</code> 中使用它。打开 <code>pages/posts/[id].js</code> 并将以下代码复制到导出的Post组件上方：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAllPostIds <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'../../lib/posts'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticPaths</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> paths <span class=\"token operator\">=</span> <span class=\"token function\">getAllPostIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    paths<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>路径包含由 <code>getAllPostIds（）</code> 返回的已知路径数组，其中包括由 <code>pages/posts/[id].js</code> 定义的参数。</li>\n<li>了解有关路径键文档的更多信息 暂时忽略 <code>fallback：false</code> -稍后我们将解释这个内容。</li>\n</ul>\n<p>我们快完成了-但我们仍需要实现 <code>getStaticProps</code> 。让我们在下一页中做到这一点！</p>\n","title":"Next.js 动态路由 getStaticPaths","date":"2023-03-31","category":"博客日记","tag":["Next.js","动态路由","getStaticPaths"]}},"__N_SSG":true}