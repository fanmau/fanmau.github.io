{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/15","wordCount":596,"contentHtml":"<h2>安装 gray-matter</h2>\n<p>首先，安装 <code>gray-matter</code> 让我们解析每个 Markdown 文件中的元数据。</p>\n<p>注意：这一步其实我们在项目一开始就已经做了，这里就不需要再安装 <code>gray-matter</code> 了，可以跳过安装 <code>gray-matter</code> 这一步。</p>\n<ul>\n<li>第一篇文章 《 <a href=\"/blog/2023/6.html\">如何使用 Next.js 构建高效的博客网站</a> 》 里我们在 package.json 文件里添加的内容，就已经有 <code>gray-matter</code> 了。</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ssh\"><code class=\"language-ssh\">npm install gray-matter</code></pre></div>\n<h2>创建实用函数来读取文件系统</h2>\n<p>接下来，我们将创建一个实用函数来解析文件系统中的数据。有了这个效用函数，我们可以：</p>\n<ul>\n<li>解析每个 Markdown 文件并获取 title、date 和文件名（将用于 id 发布 URL ）。</li>\n<li>列出索引页上的数据，按日期排序。</li>\n</ul>\n<p>在根目录中创建一个名为 <code>lib</code> 的顶级目录。然后，在 <code>lib</code> 中创建一个名为 <code>posts.js</code> 的文件，然后复制并粘贴以下代码：</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">fs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">path</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">matter</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'gray-matter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> postsDirectory <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getSortedPostsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get file names under /posts</span>\n  <span class=\"token keyword\">const</span> fileNames <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readdirSync</span><span class=\"token punctuation\">(</span>postsDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> allPostsData <span class=\"token operator\">=</span> fileNames<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileName</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Remove \".md\" from file name to get id</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token special-escape escape\">\\.</span>md<span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Read markdown file as string</span>\n    <span class=\"token keyword\">const</span> fullPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>postsDirectory<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> fileContents <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFileSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Use gray-matter to parse the post metadata section</span>\n    <span class=\"token keyword\">const</span> matterResult <span class=\"token operator\">=</span> <span class=\"token function\">matter</span><span class=\"token punctuation\">(</span>fileContents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Combine the data with the id</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">,</span>\n      <span class=\"token spread operator\">...</span>matterResult<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Sort posts by date</span>\n  <span class=\"token keyword control-flow\">return</span> allPostsData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token property-access\">date</span> <span class=\"token operator\">&#x3C;</span> b<span class=\"token punctuation\">.</span><span class=\"token property-access\">date</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<blockquote>\n<h3>笔记：</h3>\n<p>学习 <code>Next.js</code> 不需要看懂上面的代码是干什么的，作用就是让博客例子功能化。但如果您想了解更多：</p>\n<ul>\n<li>fs 是一个 Node.js 模块，可让您从文件系统中读取文件。</li>\n<li>path 是一个 Node.js 模块，可让您操作文件路径。</li>\n<li>matter 是一个库，可让您解析每个降价文件中的元数据。</li>\n<li>在 Next.js 中，lib 文件夹没有像 pages 文件夹那样的指定名称，因此您可以随意命名。通常习惯使用 lib or utils。</li>\n</ul>\n</blockquote>\n<h2>获取博客数据</h2>\n<p>现在已经解析了博客数据，我们需要将它添加到我们的索引页面 ( pages/index.js )。我们可以使用名为 的 Next.js 数据获取方法来完成此操作 <code>getStaticProps()</code> 。在下一节中，我们将学习如何实现 <code>getStaticProps()</code> 。</p>\n","title":"使用 Next.js 解析 Markdown 文件数据","date":"2023-03-28","category":"博客日记","tag":["Next.js","Markdown","gray-matter"]}},"__N_SSG":true}