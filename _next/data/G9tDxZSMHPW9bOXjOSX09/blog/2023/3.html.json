{"pageProps":{"postData":{"birthtime":"2023-05-02T01:32:57.638Z","mtime":"2023-05-02T01:32:57.638Z","slug":"2023/3","wordCount":872,"contentHtml":"<p>我们可以使用 Git 命令把本地文件推送到 Github Pages 上的远程仓库上，不需要登录 Github 网站就可以实现很多操作，非常地方便。</p>\n<h2>初始化</h2>\n<p>首先，建新一个文件夹，这个文件夹用来存放本地仓库的文件。在这个文件夹空白的地方点击右键，然后选择并点击 Git Bash Here 就可以打开 Git 窗口程序了，注意不要点错哦。</p>\n<p>在 Git 命令窗口中输入 git init 并回车，进行初始化这个文件夹，初始化过后就可以正常的使用 Git 的其他相关命令了。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git init\n</code></pre></div>\n<p>由于 Git 默认的分支和现在 Github 仓库新的默认分支不一样，在这里我们要把分支切换到和 Github 仓库一样的默认分支上。</p>\n<p>在命令窗口中输入 git branch -M main 并回车。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git branch -M main\n</code></pre></div>\n<h2>绑定仓库</h2>\n<p>后面的操作需要我们先绑定仓库，不然后面就没法继续。</p>\n<p>在命令窗口中输入 <code>git remote add origin https://github.com/fanmaue/fanmaue.github.io.git</code> 并回车。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git remote add origin https://github.com/fanmaue/fanmaue.github.io.git\n</code></pre></div>\n<p>这里回车的时候是看不到任何信息的，没有信息就说明绑定成功了。这条命令中的 <code>https://github.com/fanmaue/fanmaue.github.io.git</code> 就是你仓库的 Git 地址，这个 Git 地址可以在你仓库页面的 &#x3C;> Code 按钮里找到，你只要点一下 &#x3C;> Code 就可以看到你仓库里的地址了。</p>\n<h2>添加文件</h2>\n<p>绑定好远程仓库后，在文件夹里新建立一个文件，你在这个文件里随意添加一些内容进行，然后保存。</p>\n<p>然后在命令窗口中输入 git add . 并回车，把我们刚才建新的文件添加进去。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git add .\n</code></pre></div>\n<p>把文件添加好后，还要写入提交信息，说明你添加的文件是做什么，有什么变动。</p>\n<p>我们首次提交的时候在命令窗口中输入 git commit -m \"first\" 并回车。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git commit -m <span class=\"token string\">\"first\"</span>\n</code></pre></div>\n<p>以后你提交内容的时候，可以根据你的实际情况来修改 \"first\" 里的提交信息内容。</p>\n<h2>Push到远程仓库</h2>\n<p>我们把文件添加好后，就可以把刚才添加的文件Push到录 Github 的远程仓库了。</p>\n<p>在命令窗口下输入 git push -u origin main 并回车。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">git push -u origin main\n</code></pre></div>\n<p>因为我们是第一次 Push 推送文件到远程仓库，所以在输入上面的命令回车后还要输入 Github 账号和密码进行验证。输入正确的 Github 账号和密码验证成功后，它就会自动把刚才添加的本地文件 Push 推送文件到远程仓库了。</p>\n<div class=\"remark-highlight\"><pre class=\"language-git\"><code class=\"language-git\">Enumerating objects: 204, done.\nCounting objects: 100% (204/204), done.\nDelta compression using up to 2 threads\nCompressing objects: 100% (170/170), done.\nWriting objects: 100% (203/203), 2.80 MiB | 1.50 MiB/s, done.\nTotal 203 (delta 86), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (86/86), done.\nTo https://github.com/fanmaue/fanmaue.github.io.git\n   606daa1..fdda5ec  main -> main\nbranch <span class=\"token string\">'main'</span> set up to track <span class=\"token string\">'origin/main'</span>.\n</code></pre></div>\n<p>如果你看到上面的信息，就说明已经成功的把本地文件 Push 到远程仓库里了。这时候我们登录 Github 网站，进入到仓库里，就可以看见刚才从本地 Push 推送上来的文件了。</p>\n","title":"使用 Git Push 向远程仓库提交代码的最佳实践","date":"2023-03-15","author":[{"name":"黄胜丰","url":"https://fanma.eu.org"}],"category":"Github","tag":["Git","Push","仓库"],"head":[["meta",{"name":"keywords","content":"Git,Push,仓库"}]],"order":2,"star":2}},"__N_SSG":true}